---

# TARGET_HOSTS: mac
TARGET_HOSTS: localhost

# ~/.bash_profileへのフルパス
BASH_PROFILE_FILE: "{{ ansible_user_dir + '/.bash_profile' }}"

# ~/.bash_profileへのフルパス
BASH_PROFILE: |
  # bash_completion
  [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion

  # load .bashrc
  if [ -f ~/.bashrc ]; then
      . ~/.bashrc
  fi

# ~/.bashrcへのフルパス
BASHRC_FILE: "{{ ansible_user_dir + '/.bashrc' }}"

# ~/.bashrcのテンプレート
BASHRC: |
  # alias
  alias ls='ls -F'

  # $HOME/binを最後に通す
  export PATH=$PATH:$HOME/bin

  # nodebrew
  export PATH=$HOME/.nodebrew/current/bin:$PATH

  # ansible
  # export ansible_ssh_common_args='-o ProxyCommand="ssh -W %h:%p -q bastion@10.35.158.20"'

  # proxy
  # . ~/.proxyrc

  # --PROXY--

  # # pyenv
  # export PYENV_ROOT=$HOME/.pyenv
  # export PATH=$PYENV_ROOT/bin:$PATH
  # export PYTHON_CONFIGURE_OPTS="--enable-framework"
  # eval "$(pyenv init -)"

  # pyenv versionsでインストールされているバージョンを確認して指定する
  # pyenv global system
  # pyenv global 3.6.4

  # --PYENV--

  # --PYENV_VERSION--


#
# roles/proxy
#

# プロキシを使うかどうか
USE_PROXY: false

# ~/.proxyrc
PROXYRC_FILE: "{{ ansible_user_dir + '/.proxyrc' }}"

# ~/.noproxyrc
NO_PROXYRC_FILE: "{{ ansible_user_dir + '/.noproxyrc' }}"

# ~/.proxyrcのテンプレート
# VAULT_PROXYRCは./vars/vault.ymlで定義してあるので、ansible-vaultを使って復号化
PROXYRC: "{{ VAULT_PROXYRC }}"

NO_PROXYRC: |
  unset http_proxy
  unset https_proxy
  unset no_proxy
  unset HTTP_PROXY
  unset HTTPS_PROXY


#
# roles/pyenv
#

# pyenvで使用するバージョン
# PYENV_VERSION: 2.6.4
# PYENV_VERSION: 3.6.5
PYENV_VERSION: anaconda3-5.3.1

# pyenvディレクトリの位置
# gitでクローンする先として指定する
PYENV_DIR: "{{ ansible_user_dir + '/.pyenv' }}"

PYENVRC: |
  export PYENV_ROOT=$HOME/.pyenv
  export PATH=$PYENV_ROOT/bin:$PATH
  export PYTHON_CONFIGURE_OPTS="--enable-framework"
  eval "$(pyenv init -)"

PIP_MODULES:
  - ansible
  - ansible-lint
  - graphviz
  - jinja2
  - jsonpickle
  - openpyxl
  - pylint
  - pyyaml
  - prettytable
  - requests
  - tabulate
  - textfsm
  - tinydb
  - tqdm
  - xlrd
  - yapf
  - ntfy


#
# roles/ssh
#

# ~/.ssh
SSH_CONFIG_DIR: "{{ ansible_user_dir + '/.ssh' }}"

# ~/.ssh/config
SSH_CONFIG_FILE: "{{ ansible_user_dir + '/.ssh/config' }}"

# ~/.ssh/configの中身
# vault.ymlを解凍して確認すること
SSH_CONFIG: "{{ VAULT_SSHCONFIG }}"

#
# roles/git
#

GIT_CONFIG_FILE: "{{ ansible_user_dir + '/.gitconfig' }}"
GIT_MESSAGE_FILE: "{{ ansible_user_dir + '/.gitmessage' }}"

GITCONFIG: |
  [user]
    name = takamitsu-iida
    email = takamitsu.iida@gmail.com
  [core]
    quotepath = false
    autoCRLF = false

  [commit]
    template = ~/.gitmessage

GITMESSAGE: |
  [ci skip]


#
# roles/mas
#
#

# mas-cliをインストールした後、
# mas search Xcodeでidを調べる
MAS_PACKAGES:
  - name: Xcode (10.1)
    id: 497799835


#
# node
#

# ~/.nodebrew
NODEBREW_DIR: "{{ ansible_user_dir + '/.nodebrew' }}"

# ~/.nodebrew/src
NODEBREW_SRC_DIR: "{{ ansible_user_dir + '/.nodebrew/src' }}"

NODEBREW_NODE_VERSION: v8.15.0

# npm自身のアップデートをするか
# npm update -g npm
NODEBREW_NPM_UPDATE: true

# npm ls -g --depth=0
NPM_PACKAGES:
  - '@vue/cli'
  - http-server
  - npm i -g eslint
  - npm i -g eslint-config-google


#
# roles/osx_defaults
#

OSX_DEFAULTS_LIST:
  # dock
  - domain: com.apple.dock
    key: autohide
    type: bool
    value: false

  - domain: com.apple.dock
    key: magnification
    type: bool
    value: false

  - domain: com.apple.dock
    key: orientation
    type: string
    value: "left"

  - domain: com.apple.dock
    key: tilesize
    type: float
    value: 83

  # finder
  - domain: com.apple.finder
    key: AppleShowAllFiles
    type: string
    value: true

  # menu
  - domain: com.apple.menuextra.battery
    key: ShowPercent
    type: string
    value: YES

  # キーリピート
  - domain: NSGlobalDomain
    key: InitialKeyRepeat
    type: int
    value: 35

  # キーリピート
  - domain: NSGlobalDomain
    key: KeyRepeat
    type: int
    value: 2

  # トラックパッド
  - domain: NSGlobalDomain
    key: com.apple.trackpad.scaling
    type: float
    value: 1.5

  # すべての拡張子を表示
  - domain: NSGlobalDomain
    key: AppleShowAllExtensions
    type: bool
    value: true


#
# roles/brew
#

BREW_TAPS:
  - homebrew/core
  - caskroom/cask

BREW_CASK_APPS:
  # - docker
  - google-chrome
  - google-japanese-ime
  - ip-in-menu-bar
  - visual-studio-code
  # - virtualbox
  # - vagrant

BREW_PACKAGES:
  - autoconf
  - bash-completion
  - cdrtools
  - git
  - jq
  - mas  # mas-cli
  - nodebrew
  - telnet
  - tnftp
  - tree
  - openssl
  - python3  # システムにもpython3を入れておかないと何かと不便
  # sshpassは直接導入できないのでインストールスクリプトを指定する
  - https://git.io/sshpass.rb
  - readline
  - tree
  - wget


#
# roles/vscode
#

# このマシンの自分のsettings.jsonをそのままコピーする
VSCODE_SETTINGS_PATH: /Users/iida/Library/Application Support/Code/User/settings.json

# コピー先
VSCODE_SETTINGS_DEST: "{{ ansible_user_dir + '/Library/Application Support/Code/User/' }}"

VSCODE_EXTENSIONS:
  # Markdown
  - DavidAnson.vscode-markdownlint
  # JavaScript
  - dbaeumer.vscode-eslint
  - octref.vetur
  # Python
  - ms-python.python
  - njpwerner.autodocstring
  # Ansible
  - vscoss.vscode-ansible
  - wholroyd.jinja
  # git
  - donjayamanne.githistory
  - eamodio.gitlens
  - esbenp.prettier-vscode
  # excel
  - GrapeCity.gc-excelviewer
  # vscode固有
  - satokaz.vscode-bs-ctrlchar-remover
  - MS-CEINTL.vscode-language-pack-ja
  - samverschueren.final-newline
